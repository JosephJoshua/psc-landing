---
import { Icon } from 'astro-icon';
import IconButton from './icon-button.astro';
---

<IconButton class="origin-[right_center]" title="Toggle theme" data-theme-switcher>
  <div data-icon-theme-light>
    <Icon aria-hidden="true" name="theme/light" class="h-8" />
    <span class="sr-only">Gunakan tema terang</span>
  </div>

  <div class="hidden" data-icon-theme-dark>
    <Icon aria-hidden="true" name="theme/dark" class="h-8" />
    <span class="sr-only">Gunakan tema gelap</span>
  </div>
</IconButton>

<script>
  import invariant from 'tiny-invariant';

  const themes = ['light', 'dark'];

  const getCurrentTheme = () => {
    const currentTheme = document.documentElement.dataset.theme;
    invariant(currentTheme, 'currentTheme should not be undefined');

    return currentTheme;
  };

  const getNextTheme = () => {
    const currentTheme = getCurrentTheme();
    const currentThemeIndex = themes.indexOf(currentTheme);

    return themes[(currentThemeIndex + 1) % themes.length];
  };

  const getThemeIconElements = (theme: string) => {
    return document.querySelectorAll(`[data-icon-theme-${theme}]`);
  };

  const updateIcon = () => {
    getThemeIconElements(getCurrentTheme()).forEach((el) => {
      el.classList.add('hidden');
    });

    getThemeIconElements(getNextTheme()).forEach((el) => {
      el.classList.remove('hidden');
    });
  };

  const buttons = document.querySelectorAll('[data-theme-switcher]');
  buttons.forEach((button) => {
    button.addEventListener('click', () => {
      const nextTheme = getNextTheme();

      document.documentElement.dataset.theme = nextTheme;
      localStorage.setItem('theme', nextTheme);

      updateIcon();
    });
  });

  updateIcon();
</script>
